@model RegisterClientInClassViewModel

@{
    ViewData["Title"] = "Find Client";
}


<div class="container mb-4 view-text">
    <h2 style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Find Client</h2>
    <hr style="margin-bottom: 2.2rem" />
</div>

<div class="row justify-content-center mt-2 view-form-style">
    <div class="col-md-4">
        <form asp-action="FindClientByEmail" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Client Email</label>
                    <input type="email" name="email" class="form-control" required />
                    <span asp-validation-for="ClientEmail" class="text-danger"></span>
            </div>
            <div class="form-group text-center mt-4">
                <button id="process" type="submit" class="btn btn-primary"><i class="fa-solid fa-magnifying-glass me-2"></i>Find Client</button>
            </div>
        </form>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('process').addEventListener('click', function (event) {
            // Prevenir o envio imediato do formulário
            event.preventDefault();

            var submitButton = event.target;

            // Desabilitar o botão e mudar o texto
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fa-solid fa-spinner spin-icon me-2"></i>Processing';

            // Submeter o formulário após a modificação
            submitButton.closest('form').submit();
        });
    });
</script>
