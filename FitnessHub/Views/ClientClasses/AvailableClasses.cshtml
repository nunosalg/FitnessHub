@model AvailableClassesViewModel

@{
    ViewData["Title"] = "Available Classes";
}

<div class="container mb-4 view-text">
    <h2 style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Available Classes</h2>
</div>


<form method="get" asp-action="AvailableClasses" asp-controller="ClientClasses">
    <div class="row mb-4 view-form-style">
        <div class="col-md-2 offset-3">
            <div class="form-group">
                <label asp-for="LocationId" class="control-label">Select Location</label>
                <select asp-for="LocationId" asp-items="Model.LocationList" class="form-control" name="LocationId">
                    <option value="0">All</option>
                </select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Select Category</label>
                <select asp-for="CategoryId" asp-items="Model.Categories" class="form-control" name="CategoryId">
                    <option value="0">All</option>
                </select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label asp-for="DateFilter" class="control-label">Date</label>
                <input id="dateStart" asp-for="DateFilter" type="date" class="form-control"
                       value="@Model.DateFilter?.ToString("yyyy-MM-dd")"
                       min="@DateTime.UtcNow.ToString("yyyy-MM-dd")" />
                @* <span asp-validation-for="DateFilter" class="text-danger"></span> *@
            </div>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fa-solid fa-magnifying-glass me-2"></i>Filter
                </button>
            </div>
        </div>
    </div>
</form>




@if (Model.Classes.Any())
{
    <div class="row justify-content-center mt-5 mb-2">
        @foreach (var classItem in Model.Classes)
        {
            <div class="col-lg-3 col-md-3 col-sm-8 mx-2 mb-0">
                <div class="card">
                    <div style="text-align: center; font-size: 2em; font-weight: bold" class="card-header"><div>@classItem.ClassType</div><div class="text-muted mb-1" style="font-size:1rem">@classItem.Category</div></div>
                    <div class="card-body">
                        <div class="card-text">
                            <p><strong>Instructor:</strong> @classItem.InstructorName</p>
                            <p><strong>Start Date:</strong> @classItem.DateStart.ToString("g")</p>
                            <p><strong>End Date:</strong> @classItem.DateEnd.ToString("g")</p>
                            <p><strong>Location:</strong> @classItem.Location</p>
                        </div>
                        <div class="d-flex justify-content-center align-items-center">

                            @if (classItem.Full == false && classItem.Registered == false)
                            {
                                <form asp-action="Register" method="post" style="margin-right: 10px;">
                                    <input type="hidden" name="classId" value="@classItem.Id" />
                                    <input type="hidden" name="isOnline" value="@classItem.IsOnline.ToString()" />
                                    <button id="register" type="submit" class="btn btn-primary"><i class="fa-solid fa-pen me-2"></i>Register</button>
                                </form>
                            }

                            <a asp-action="ClassDetails" asp-route-id="@classItem.Id" class="btn btn-info me-2">
                                <i class="fa-solid fa-list me-2"></i>
                                More
                            </a>

                            @if (!classItem.IsOnline && classItem.Full == true && classItem.InWaitlist == false)
                            {
                                <form asp-action="JoinWaitlist" method="post" style="margin-right: 10px;">
                                    <input type="hidden" name="classId" value="@classItem.Id" />
                                    <button id="process" type="submit" class="btn btn-success"><i class="fa-solid fa-list-ol me-2"></i>Join Waitlist</button>
                                </form>
                            }
                            else if (!classItem.IsOnline && classItem.Full == true && classItem.InWaitlist == true)
                            {
                                <form asp-action="ExitWaitlist" method="post" style="margin-right: 10px;">
                                    <input type="hidden" name="classId" value="@classItem.Id" />
                                    <button id="process" type="submit" class="btn btn-danger"><i class="fa-solid fa-x me-2"></i>Leave Waitlist</button>
                                </form>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <hr />

    <h4 class="no-items-list">No Classes were found!</h4>

}


<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('process').addEventListener('click', function (event) {
            // Prevenir o envio imediato do formulário
            event.preventDefault();

            var submitButton = event.target;

            // Desabilitar o botão e mudar o texto
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fa-solid fa-spinner spin-icon me-2"></i>Processing';

            // Submeter o formulário após a modificação
            submitButton.closest('form').submit();
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('register').addEventListener('click', function (event) {
            // Prevenir o envio imediato do formulário
            event.preventDefault();

            var submitButton = event.target;

            // Desabilitar o botão e mudar o texto
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fa-solid fa-spinner spin-icon me-2"></i>Registering';

            // Submeter o formulário após a modificação
            submitButton.closest('form').submit();
        });
    });
</script>



