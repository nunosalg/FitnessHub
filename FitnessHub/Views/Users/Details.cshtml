@model FitnessHub.Models.UserDetailsViewModel

@{
    ViewData["Title"] = "User Details";
}

<div class="container detailsdelete-text">
    <h2 class="view-text" style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">@Model.FullName Details</h2>
    <hr />
    <div class="row">

        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <dl class="row" style="color: black">
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.FirstName)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.FirstName)
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.LastName)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.LastName)
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.BirthDate)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.BirthDate)
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.PhoneNumber)
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.Email)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.Email)
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.Gym.Name)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.Gym.Data)<br />
                        </dd>
                        <dt class="col-sm-12">
                            @Html.DisplayNameFor(model => model.Role)
                        </dt>
                        <dd class="col-sm-12">
                            @Html.DisplayFor(model => model.Role)
                        </dd>
                    </dl>

                    @if (this.User.Identity.IsAuthenticated && (this.User.IsInRole("MasterAdmin") || this.User.IsInRole("Admin")))
                    {
                        <div class="form-group">
                            <a asp-action="Index" class="btn btn-secondary me-2"><i class="fa-solid fa-chevron-left me-2"></i>Back</a>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-class-id="@Model.Id" @ViewBag.Status>
                                <i class="fa-solid fa-trash-can me-2"></i>Delete
                            </button>
                            <div asp-validation-summary="ModelOnly" class="text-danger mt-4">
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <a asp-controller="Communication" asp-action="ClientsAssignments" class="btn btn-secondary me-2"><i class="fa-solid fa-chevron-left me-2"></i>Back</a>
                            <div asp-validation-summary="ModelOnly" class="text-danger mt-4">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-3 mb-4" style="margin-left: 10%; align-content: center">
            <dl class="row">
                <dd class="col-sm-12">
                    <img src="@Model?.Avatar" alt="User image" style="width:100%;height:auto; border-radius:15px; border-color: lightgray; border-width: 0.5px" />
                </dd>
            </dl>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you really want to delete this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fa-solid fa-x me-2"></i>Cancel</button>
                <form id="deleteForm" asp-action="Delete" method="post" style="display:inline;">
                    <input type="hidden" id="classId" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger"><i class="fa-solid fa-trash me-2"></i>Confirm Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var confirmDeleteModal = document.getElementById('confirmDeleteModal');
    confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var classId = button.getAttribute('data-class-id');
        var form = document.getElementById('deleteForm');
        form.querySelector('#classId').value = classId;
    });
</script>



