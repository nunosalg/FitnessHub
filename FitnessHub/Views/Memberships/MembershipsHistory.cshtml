@model IEnumerable<FitnessHub.Data.Entities.History.MembershipHistory>

@{
    ViewData["Title"] = "Memberships History";
}

<h2 class="view-text" style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Memberships History</h2>

@if (!Model.Any())
{
    <hr />
    <h4 class="no-items-list">There is no Memberships History!</h4>
}
else
{
    <div class="card-container">
        <div class="card cardTable">
            <table id="dataTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            ID
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Status
                        </th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @item.Price.ToString("C2")
                            </td>
                            <td>
                                @item.DateCreated.ToShortDateString()
                            </td>
                            <td>
                                @if (item.Canceled == true)
                                {
                                    <span>Canceled</span>
                                }
                                else
                                {
                                    <span>Active</span>
                                }
                            </td>
                            <td>
                                <div class="form-group">
                                    <button type="button"
                                            class="btn btn-primary"
                                            data-bs-toggle="modal"
                                            data-bs-target="#membershipDescriptionModal"
                                            data-description="@System.Text.Json.JsonSerializer.Serialize(item.Description)">
                                        <i class="fa-solid fa-list me-2"></i>Expand
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal Structure -->
    <div class="modal fade" id="membershipDescriptionModal" tabindex="-1" aria-labelledby="membershipDescriptionModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="membershipDescriptionModalLabel">Description</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <ul id="description">
                        <!-- Membership description will be dynamically added here -->
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fa-solid fa-x me-2"></i>Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const membershipDescriptionModal = document.getElementById('membershipDescriptionModal');

            membershipDescriptionModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const description = JSON.parse(button.getAttribute('data-description')); // Parse the description as JSON

                const descriptionElement = document.getElementById('description');
                descriptionElement.innerHTML = '';  // Clear existing content

                // Check if description is an array; if not, assume it is plain text
                if (Array.isArray(description)) {
                    description.forEach(item => {
                        const li = document.createElement('li');
                        li.textContent = item; // Add each item as a list item
                        descriptionElement.appendChild(li);
                    });
                } else {
                    descriptionElement.textContent = description; // Handle case for a plain string description
                }
            });
        });
    </script>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/English.json"
                },
                "aLengthMenu": [
                    [20, 50, 100, 200, -1],
                    [20, 50, 100, 200, "All"]
                ],
                columnDefs: [
                    { orderable: false, targets: [-1, 0] }
                ]
            });
        });
    </script>
}