@model IEnumerable<FitnessHub.Data.Entities.GymClasses.OnlineClass>

@{
    ViewData["Title"] = "Online Classes";
}

<div style="display: flex; justify-content: center; align-items: center; width: 100%; padding: 0 1rem; margin-bottom: 4vh; margin-top: 3.5vh">
    <!-- Wrapper for the button and heading -->
    <div style="display: inline-flex; align-items: center;">
        <!-- Button next to the text with margin -->
        <a style="margin-left: -100px" asp-action="CreateOnlineClass" class="btn btn-primary">
            <i class="fa-solid fa-globe me-2"></i>New
        </a>
        <!-- Heading centered -->
        <h2 class="view-text" style="font-weight: bolder; margin: 0; margin-left: 40px">
            Online Classes
        </h2>
    </div>
</div>

@if (!Model.Any())
{
    <hr />
    <h4 class="no-items-list">There are no online classes!</h4>
}
else
{
    <div class="card-container">
        <div class="card cardTable">
            <table id="dataTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            Class
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Category)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Instructor)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateStart)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateEnd)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Platform)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @item.ClassType.Name
                            </td>
                            <td>
                                @item.Category.Name
                            </td>
                            <td>
                                @item.Instructor.FullName
                                <br />(@item.Instructor.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateStart)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateEnd)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Platform)
                            </td>
                            <td>
                                <div style="display: flex">
                                    <a asp-action="UpdateOnlineClass" asp-route-id="@item.Id" class="btn btn-warning me-2">
                                        <i class="fa-solid fa-pen me-2"></i>Update
                                    </a>
                                    <a asp-action="OnlineClassDetails" asp-route-id="@item.Id" class="btn btn-info me-2">
                                        <i class="fa-solid fa-list me-2"></i>More
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/English.json"
                },
                "aLengthMenu": [
                    [20, 50, 100, 200, -1],
                    [20, 50, 100, 200, "All"]
                ],
                columnDefs: [
                    { orderable: false, targets: [-1] }
                ]
            });
        });
    </script>
}

