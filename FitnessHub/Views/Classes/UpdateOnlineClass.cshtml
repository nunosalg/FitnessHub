@model FitnessHub.Models.OnlineClassViewModel

@{
    ViewData["Title"] = "Update Online Class";
}

<h2 class="view-text" style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Update Online Class</h2>

<hr />
<div class="row view-form-style">
    <div class="col-md-4 offset-md-4">
        <form asp-action="UpdateOnlineClass" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" id="gymSelect" value="@ViewBag.GymId" />

            <div class="form-group">
                <label class="control-label">Online Class ID</label>
                <input id="classId" readonly value="@Model.Id" class="form-control" />
            </div>

            <div class="form-group">
                <label class="control-label">Category</label>
                <input readonly value="@Model.Category.Name" class="form-control" />
            </div>

            <div class="form-group">
                <label class="control-label">Class Type</label>
                <input readonly value="@Model.ClassType.Name" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="DateStart" class="control-label"></label>
                <input id="dateStart" asp-for="DateStart" type="datetime-local" class="form-control"
                       value="@Model.DateStart.ToString("yyyy-MM-ddTHH:mm")"
                       min="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm")" />
                <span asp-validation-for="DateStart" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DateEnd" class="control-label"></label>
                <input id="dateEnd" asp-for="DateEnd" type="datetime-local" class="form-control"
                       value="@Model.DateEnd.ToString("yyyy-MM-ddTHH:mm")"
                       min="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm")" />
                <span asp-validation-for="DateEnd" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="InstructorId" class="control-label">Instructor</label>
                <select asp-for="InstructorId" class="form-control" asp-items="@Model.InstructorsList">
                    <option value="">Select an Instructor</option>
                </select>
                <span asp-validation-for="InstructorId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Platform" class="control-label"></label>
                <input asp-for="Platform" class="form-control" />
                <span asp-validation-for="Platform" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button id="process" type="submit" class="btn btn-primary me-4">
                    <i class="fa-solid fa-check me-2"></i>Update
                </button>
                <a asp-action="OnlineClasses" class="btn btn-secondary">
                    <i class="fa-solid fa-chevron-left me-2"></i>Back
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        // Scripts for getting available instructors for given inputs
        <script type="text/javascript">

            $(document).ready(function () {
                function UpdateAvailableInstructors() {
                    var dateStart = $("#dateStart").val();
                    var dateEnd = $("#dateEnd").val();
                    var classId = $("#classId").val();
                    var gymSelect = $("#gymSelect").val();

                    $.ajax({
                        url: '@Url.Action("GetAvailableInstructorsOnlineEdit", "Classes")',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            dateStart: dateStart,
                            dateEnd: dateEnd,
                            gymSelect: gymSelect,
                            classId: classId,
                        },
                        success: function (instructors) {
                            console.log('Received instructors:', instructors); // Debug: log the response
                            $("#instructorSelect").empty(); // Clear existing options
                            $("#instructorSelect").append('<option value="">Select an Instructor</option>'); // Default option

                            $.each(instructors, function (index, instructor) {
                                console.log('Instructor:', instructor); // Debug: log each instructor object
                                $("#instructorSelect").append('<option value="' + instructor.id + '">' + instructor.firstName + ' ' + instructor.lastName + '</option>');
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching instructors:', status, error); // Improved error logging
                            alert('Failed to retrieve available Instructors: ' + error);
                        }
                    });
                }

                // Call UpdateAvailableInstructors on page load
                UpdateAvailableInstructors();

                // Bind the change events for start and end dates to dynamically update instructors
                $("#dateStart, #dateEnd").change(UpdateAvailableInstructors);
            });
        </script>
    }
}


<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('process').addEventListener('click', function (event) {
            // Prevenir o envio imediato do formulário
            event.preventDefault();

            var submitButton = event.target;

            // Desabilitar o botão e mudar o texto
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fa-solid fa-spinner spin-icon me-2"></i>Processing';

            // Submeter o formulário após a modificação
            submitButton.closest('form').submit();
        });
    });
</script>