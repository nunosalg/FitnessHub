@model FitnessHub.Models.VideoClassViewModel

@{
    ViewData["Title"] = "Create Video Class";
}


<h2 class="view-text" style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Add Video Class</h2>

<hr />
<div class="row view-form-style">
    <div class="col-md-4 offset-md-4">
        <form asp-action="CreateVideoClass">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select asp-for="CategoryId" id="categorySelect" class="form-control" asp-items="@Model.CategoriesList">
                    <option value="0">Select a Category</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            @* TYPE SELECT *@

            <div class="form-group">
                <label asp-for="ClassTypeId" class="control-label">Class Type</label>
                <select asp-for="ClassTypeId" id="typeSelect" class="form-control" asp-items="@Model.ClassTypeList">
                    <option value="0">Select a Class Type</option>
                </select>
                <span asp-validation-for="ClassTypeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="VideoClassUrl" class="control-label">Youtube Video Class URL</label>
                <input asp-for="VideoClassUrl" class="form-control" placeholder="https://www.youtube.com..." />
                <span asp-validation-for="VideoClassUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Title" class="control-label">Video Title</label>
                <input asp-for="Title" class="form-control"/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="6" style="height: 200px"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary me-4">
                    <i class="fa-solid fa-check me-2"></i>Create
                </button>
                <a asp-action="VideoClasses" class="btn btn-secondary">
                    <i class="fa-solid fa-chevron-left me-2"></i>Back
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        // Scripts for getting types from category
        <script type="text/javascript">
            $(document).ready(function () {
                function GetTypesFromCategory() {
                    var categoryId = $("#categorySelect").val();

                    $.ajax({
                        url: '@Url.Action("GetClassTypesFromCategory", "Classes")',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            categoryId: categoryId,
                        },
                        success: function (types) {
                            console.log('Received types:', types); // Debug: log the response

                            // Verificar se "types" é um array antes de prosseguir
                            if (!Array.isArray(types)) {
                                console.error('Unexpected response format:', types);
                                alert('Error: Unexpected response format.');
                                return;
                            }

                            // Limpar as opções anteriores
                            $("#typeSelect").empty();
                            $("#typeSelect").append('<option value="0">Select a Class Type</option>');

                            // Adicionar novas opções com base nos dados retornados
                            $.each(types, function (index, type) {
                                console.log('Type:', type); // Debug: log each type object

                                // Verifique se a propriedade 'Name' existe
                                const typeName = type.Name || type.name || 'Unknown';
                                const typeId = type.id || type.ID;

                                if (typeId && typeName) {
                                    $("#typeSelect").append(
                                        '<option value="' + typeId + '">' + typeName + '</option>'
                                    );
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching class types:', status, error);
                            alert('Failed to retrieve available class types: ' + error);
                        }
                    });
                }

                // Call GetTypesFromCategory on page load
                GetTypesFromCategory();

                // Bind the change events for category select
                $("#categorySelect").change(GetTypesFromCategory);
            });
        </script>
    }
}